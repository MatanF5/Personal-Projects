{"ast":null,"code":"export class AuthService {\n  async login(userName, password) {\n    if (userName === 'user' && password === '1234') {\n      return {\n        userName: userName,\n        email: 'some@email.com'\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  async getUserAttributes(user) {\n    const result = [];\n    result.push({\n      Name: 'description',\n      Value: 'Best user ever!'\n    });\n    result.push({\n      Name: 'job',\n      Value: 'Engineer'\n    });\n    result.push({\n      Name: 'age',\n      Value: '25'\n    });\n    result.push({\n      Name: 'experience',\n      Value: '3 years'\n    });\n    return result;\n  }\n\n}","map":{"version":3,"sources":["E:/matan/Documents/Personal-Projects/space-finder/src/services/AuthService.ts"],"names":["AuthService","login","userName","password","email","undefined","getUserAttributes","user","result","push","Name","Value"],"mappings":"AAGA,OAAO,MAAMA,WAAN,CAAkB;AACH,QAALC,KAAK,CAACC,QAAD,EAAmBC,QAAnB,EAA+D;AAC7E,QAAID,QAAQ,KAAK,MAAb,IAAuBC,QAAQ,KAAK,MAAxC,EAAgD;AAC5C,aAAO;AACHD,QAAAA,QAAQ,EAAEA,QADP;AAEHE,QAAAA,KAAK,EAAE;AAFJ,OAAP;AAIH,KALD,MAKO;AACH,aAAOC,SAAP;AACH;AACJ;;AAE6B,QAAjBC,iBAAiB,CAACC,IAAD,EAAqC;AAC/D,UAAMC,MAAuB,GAAG,EAAhC;AACAA,IAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIAH,IAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,MAAAA,IAAI,EAAE,KADE;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIAH,IAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,MAAAA,IAAI,EAAE,KADE;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIAH,IAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,MAAAA,IAAI,EAAE,YADE;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIA,WAAOH,MAAP;AACH;;AA/BoB","sourcesContent":["import { User, UserAttribute } from '../model/Model'\r\n\r\n\r\nexport class AuthService {\r\n    public async login(userName: string, password: string):Promise<User | undefined> {\r\n        if (userName === 'user' && password === '1234') {\r\n            return {\r\n                userName: userName,\r\n                email: 'some@email.com'\r\n            }\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n\r\n    public async getUserAttributes(user: User):Promise<UserAttribute[]>{\r\n        const result: UserAttribute[] = [];\r\n        result.push({\r\n            Name: 'description',\r\n            Value: 'Best user ever!'\r\n        });\r\n        result.push({\r\n            Name: 'job',\r\n            Value: 'Engineer'\r\n        });\r\n        result.push({\r\n            Name: 'age',\r\n            Value: '25'\r\n        });\r\n        result.push({\r\n            Name: 'experience',\r\n            Value: '3 years'\r\n        });\r\n        return result\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}